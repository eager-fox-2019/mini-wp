{"id":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","dependencies":[{"name":"/home/dion/Documents/phase-2/miniwp/client/package.json","includedInParent":true,"mtime":1561266555484},{"name":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/package.json","includedInParent":true,"mtime":1561266555348}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tokenizeWithNewLines(str) {\n    var NewLine = \"\\n\";\n    if (str === NewLine) {\n        return [str];\n    }\n    var lines = str.split(NewLine);\n    if (lines.length === 1) {\n        return lines;\n    }\n    var lastIndex = lines.length - 1;\n    return lines.reduce(function (pv, line, ind) {\n        if (ind !== lastIndex) {\n            if (line !== \"\") {\n                pv = pv.concat(line, NewLine);\n            }\n            else {\n                pv.push(NewLine);\n            }\n        }\n        else if (line !== \"\") {\n            pv.push(line);\n        }\n        return pv;\n    }, []);\n}\nexports.tokenizeWithNewLines = tokenizeWithNewLines;\n;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tokenizeWithNewLines(str) {\n    var NewLine = \"\\n\";\n    if (str === NewLine) {\n        return [str];\n    }\n    var lines = str.split(NewLine);\n    if (lines.length === 1) {\n        return lines;\n    }\n    var lastIndex = lines.length - 1;\n    return lines.reduce(function (pv, line, ind) {\n        if (ind !== lastIndex) {\n            if (line !== \"\") {\n                pv = pv.concat(line, NewLine);\n            }\n            else {\n                pv.push(NewLine);\n            }\n        }\n        else if (line !== \"\") {\n            pv.push(line);\n        }\n        return pv;\n    }, []);\n}\nexports.tokenizeWithNewLines = tokenizeWithNewLines;\n;\n"},"lineCount":30}},"error":null,"hash":"a646d6d0105424eb14a32d7e6be3cc5d","cacheData":{"env":{}}}