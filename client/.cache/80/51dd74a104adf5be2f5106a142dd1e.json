{"id":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","dependencies":[{"name":"/home/dion/Documents/phase-2/miniwp/client/package.json","includedInParent":true,"mtime":1561266555484},{"name":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/package.json","includedInParent":true,"mtime":1561266555348},{"name":"./value-types","loc":{"line":3,"column":28},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/value-types.js"},{"name":"./helpers/string","loc":{"line":4,"column":18},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/helpers/string.js"},{"name":"./helpers/object","loc":{"line":5,"column":18},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/helpers/object.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar value_types_1 = require(\"./value-types\");\nvar str = require(\"./helpers/string\");\nvar obj = require(\"./helpers/object\");\nvar InsertOpDenormalizer = (function () {\n    function InsertOpDenormalizer() {\n    }\n    InsertOpDenormalizer.denormalize = function (op) {\n        if (!op || typeof op !== 'object') {\n            return [];\n        }\n        if (typeof op.insert === 'object' || op.insert === value_types_1.NewLine) {\n            return [op];\n        }\n        var newlinedArray = str.tokenizeWithNewLines(op.insert + '');\n        if (newlinedArray.length === 1) {\n            return [op];\n        }\n        var nlObj = obj.assign({}, op, { insert: value_types_1.NewLine });\n        return newlinedArray.map(function (line) {\n            if (line === value_types_1.NewLine) {\n                return nlObj;\n            }\n            return obj.assign({}, op, {\n                insert: line\n            });\n        });\n    };\n    return InsertOpDenormalizer;\n}());\nexports.InsertOpDenormalizer = InsertOpDenormalizer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar value_types_1 = require(\"./value-types\");\nvar str = require(\"./helpers/string\");\nvar obj = require(\"./helpers/object\");\nvar InsertOpDenormalizer = (function () {\n    function InsertOpDenormalizer() {\n    }\n    InsertOpDenormalizer.denormalize = function (op) {\n        if (!op || typeof op !== 'object') {\n            return [];\n        }\n        if (typeof op.insert === 'object' || op.insert === value_types_1.NewLine) {\n            return [op];\n        }\n        var newlinedArray = str.tokenizeWithNewLines(op.insert + '');\n        if (newlinedArray.length === 1) {\n            return [op];\n        }\n        var nlObj = obj.assign({}, op, { insert: value_types_1.NewLine });\n        return newlinedArray.map(function (line) {\n            if (line === value_types_1.NewLine) {\n                return nlObj;\n            }\n            return obj.assign({}, op, {\n                insert: line\n            });\n        });\n    };\n    return InsertOpDenormalizer;\n}());\nexports.InsertOpDenormalizer = InsertOpDenormalizer;\n"},"lineCount":33}},"error":null,"hash":"ac6fd7ad1911bc585ef57445d7accce1","cacheData":{"env":{}}}