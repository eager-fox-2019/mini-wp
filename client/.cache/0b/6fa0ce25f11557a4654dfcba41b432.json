{"id":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","dependencies":[{"name":"/home/dion/Documents/phase-2/miniwp/client/package.json","includedInParent":true,"mtime":1561266555484},{"name":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/package.json","includedInParent":true,"mtime":1561266555348},{"name":"./DeltaInsertOp","loc":{"line":3,"column":30},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/DeltaInsertOp.js"},{"name":"./value-types","loc":{"line":4,"column":28},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/value-types.js"},{"name":"./InsertData","loc":{"line":5,"column":27},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertData.js"},{"name":"./OpAttributeSanitizer","loc":{"line":6,"column":37},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/OpAttributeSanitizer.js"},{"name":"./InsertOpDenormalizer","loc":{"line":7,"column":37},"parent":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","resolved":"/home/dion/Documents/phase-2/miniwp/client/node_modules/quill-delta-to-html/dist/commonjs/InsertOpDenormalizer.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeltaInsertOp_1 = require(\"./DeltaInsertOp\");\nvar value_types_1 = require(\"./value-types\");\nvar InsertData_1 = require(\"./InsertData\");\nvar OpAttributeSanitizer_1 = require(\"./OpAttributeSanitizer\");\nvar InsertOpDenormalizer_1 = require(\"./InsertOpDenormalizer\");\nvar InsertOpsConverter = (function () {\n    function InsertOpsConverter() {\n    }\n    InsertOpsConverter.convert = function (deltaOps, options) {\n        if (!Array.isArray(deltaOps)) {\n            return [];\n        }\n        var denormalizedOps = [].concat.apply([], deltaOps.map(InsertOpDenormalizer_1.InsertOpDenormalizer.denormalize));\n        var results = [];\n        var insertVal, attributes;\n        for (var _i = 0, denormalizedOps_1 = denormalizedOps; _i < denormalizedOps_1.length; _i++) {\n            var op = denormalizedOps_1[_i];\n            if (!op.insert) {\n                continue;\n            }\n            insertVal = InsertOpsConverter.convertInsertVal(op.insert, options);\n            if (!insertVal) {\n                continue;\n            }\n            attributes = OpAttributeSanitizer_1.OpAttributeSanitizer.sanitize(op.attributes, options);\n            results.push(new DeltaInsertOp_1.DeltaInsertOp(insertVal, attributes));\n        }\n        return results;\n    };\n    InsertOpsConverter.convertInsertVal = function (insertPropVal, sanitizeOptions) {\n        if (typeof insertPropVal === 'string') {\n            return new InsertData_1.InsertDataQuill(value_types_1.DataType.Text, insertPropVal);\n        }\n        if (!insertPropVal || typeof insertPropVal !== 'object') {\n            return null;\n        }\n        var keys = Object.keys(insertPropVal);\n        if (!keys.length) {\n            return null;\n        }\n        return value_types_1.DataType.Image in insertPropVal ?\n            new InsertData_1.InsertDataQuill(value_types_1.DataType.Image, OpAttributeSanitizer_1.OpAttributeSanitizer.sanitizeLinkUsingOptions(insertPropVal[value_types_1.DataType.Image] + '', sanitizeOptions))\n            : value_types_1.DataType.Video in insertPropVal ?\n                new InsertData_1.InsertDataQuill(value_types_1.DataType.Video, OpAttributeSanitizer_1.OpAttributeSanitizer.sanitizeLinkUsingOptions(insertPropVal[value_types_1.DataType.Video] + '', sanitizeOptions))\n                : value_types_1.DataType.Formula in insertPropVal ?\n                    new InsertData_1.InsertDataQuill(value_types_1.DataType.Formula, insertPropVal[value_types_1.DataType.Formula])\n                    : new InsertData_1.InsertDataCustom(keys[0], insertPropVal[keys[0]]);\n    };\n    return InsertOpsConverter;\n}());\nexports.InsertOpsConverter = InsertOpsConverter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"node_modules/quill-delta-to-html/dist/commonjs/InsertOpsConverter.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeltaInsertOp_1 = require(\"./DeltaInsertOp\");\nvar value_types_1 = require(\"./value-types\");\nvar InsertData_1 = require(\"./InsertData\");\nvar OpAttributeSanitizer_1 = require(\"./OpAttributeSanitizer\");\nvar InsertOpDenormalizer_1 = require(\"./InsertOpDenormalizer\");\nvar InsertOpsConverter = (function () {\n    function InsertOpsConverter() {\n    }\n    InsertOpsConverter.convert = function (deltaOps, options) {\n        if (!Array.isArray(deltaOps)) {\n            return [];\n        }\n        var denormalizedOps = [].concat.apply([], deltaOps.map(InsertOpDenormalizer_1.InsertOpDenormalizer.denormalize));\n        var results = [];\n        var insertVal, attributes;\n        for (var _i = 0, denormalizedOps_1 = denormalizedOps; _i < denormalizedOps_1.length; _i++) {\n            var op = denormalizedOps_1[_i];\n            if (!op.insert) {\n                continue;\n            }\n            insertVal = InsertOpsConverter.convertInsertVal(op.insert, options);\n            if (!insertVal) {\n                continue;\n            }\n            attributes = OpAttributeSanitizer_1.OpAttributeSanitizer.sanitize(op.attributes, options);\n            results.push(new DeltaInsertOp_1.DeltaInsertOp(insertVal, attributes));\n        }\n        return results;\n    };\n    InsertOpsConverter.convertInsertVal = function (insertPropVal, sanitizeOptions) {\n        if (typeof insertPropVal === 'string') {\n            return new InsertData_1.InsertDataQuill(value_types_1.DataType.Text, insertPropVal);\n        }\n        if (!insertPropVal || typeof insertPropVal !== 'object') {\n            return null;\n        }\n        var keys = Object.keys(insertPropVal);\n        if (!keys.length) {\n            return null;\n        }\n        return value_types_1.DataType.Image in insertPropVal ?\n            new InsertData_1.InsertDataQuill(value_types_1.DataType.Image, OpAttributeSanitizer_1.OpAttributeSanitizer.sanitizeLinkUsingOptions(insertPropVal[value_types_1.DataType.Image] + '', sanitizeOptions))\n            : value_types_1.DataType.Video in insertPropVal ?\n                new InsertData_1.InsertDataQuill(value_types_1.DataType.Video, OpAttributeSanitizer_1.OpAttributeSanitizer.sanitizeLinkUsingOptions(insertPropVal[value_types_1.DataType.Video] + '', sanitizeOptions))\n                : value_types_1.DataType.Formula in insertPropVal ?\n                    new InsertData_1.InsertDataQuill(value_types_1.DataType.Formula, insertPropVal[value_types_1.DataType.Formula])\n                    : new InsertData_1.InsertDataCustom(keys[0], insertPropVal[keys[0]]);\n    };\n    return InsertOpsConverter;\n}());\nexports.InsertOpsConverter = InsertOpsConverter;\n"},"lineCount":54}},"error":null,"hash":"5097842a10101e199f57f7a5967402de","cacheData":{"env":{}}}